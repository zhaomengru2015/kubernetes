vector:
  nameOverride: "vector-agent"
  fullnameOverride: "vector-agent"
  role: Agent
  podPriorityClassName: "high-priority-nonpreempting"
  logLevel: "info"
  podAnnotations:
    prometheus.io/port: "9598"
    prometheus.io/scrape: "true"
  containerPorts:
    - name: metrics
      containerPort: 9598
      protocol: TCP
    - name: api
      containerPort: 8686
      protocol: TCP
  customConfig:
    data_dir: /vector-data-dir
    api:
      enabled: true
      address: 127.0.0.1:8686
      playground: false
    sources:
      kubernetes_pod_logs:
        type: "kubernetes_logs"
        max_read_bytes: 100000
        ignore_older_secs: 86400 # ignore logs older than 1 day
      ec2_logs: # put all non k8s logs together then add source field by log path
        type: "file"
        include:
          - "/var/log/k3s*.log"
          - "/var/log/syslog"
          - "/var/log/auth.log"
        max_read_bytes: 100000
      vector_monitoring:
        type: internal_metrics

    transforms:
      kubernetes_logs_timestamp_added:
        type: remap
        inputs:
          - kubernetes_pod_logs
        source: |-
          # add @timestamp field for calculate latency pipeline
          ."@timestamp"=.timestamp
      ec2_logs_timestamp_added:
        type: remap
        inputs:
          - ec2_logs
        source: |-
          # add @timestamp field for calculate latency pipeline
          ."@timestamp"=.timestamp

    sinks:
      victoria_metrics:
        type: prometheus_exporter
        inputs:
          - vector_monitoring
      vector_aggregator:
        inputs:
          - kubernetes_pod_logs
        type: vector
        address: "vector-aggregator.monitoring.svc.cluster.local:6000"
        version: "2"
vector-aggregator:
  nameOverride: "vector-aggregator"
  fullnameOverride: "vector-aggregator"
  role: Aggregator
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 300m
      memory: 640Mi
  logLevel: "info"
  podAnnotations:
    prometheus.io/port: "9598"
    prometheus.io/scrape: "true"
  containerPorts:
    - name: metrics
      containerPort: 9598
      protocol: TCP
    - name: api
      containerPort: 8686
      protocol: TCP
  customConfig:
    data_dir: /vector-data-dir
    api:
      enabled: false
    # api:
    #   enabled: true
    #   address: 127.0.0.1:8686
    #   playground: false
    sources:
      vector_logs:
        type: http_server
        address: vector-aggregator-haproxy.default.svc.cluster.local:6000
    transforms:
      kubernetes_logs_mutate_fields:
        type: remap
        inputs:
          - vector
        source: |-
          log_message = .message

          # add lf_dc_name field from env var for all logs
          .lf_dc_name = get_env_var!("lf_dc_name")

          #TODO: mutations for modesecurity logs, is it still needed?
          if .kubernetes.pod_namespace == "ingress-nginx" && contains!(log_message, "modsecurity") {
              .waf = "modsecurity"
          }
    sinks:
      stdout:
        type: console
        inputs: ["vector_logs"]
        rawConfig: |
          target = "stdout"
          encoding = "json"
  haproxy:
    enabled: true
    # existingConfigMap: vector-haproxy
    containerPorts:
      - name: vector
        containerPort: 6000
        protocol: TCP
    service:
      ports:
        - name: vector
          port: 6000
          protocol: TCP
          targetPort: 6000
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 100m
        memory: 128Mi
